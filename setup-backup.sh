#!/bin/bash

# Script de configura√ß√£o do sistema de backup
# Execute este script para configurar o sistema de backup

echo "üöÄ Configurando Sistema de Backup do Doutor Agenda..."

# Verificar se est√° no diret√≥rio correto
if [ ! -f "package.json" ]; then
    echo "‚ùå Execute este script no diret√≥rio raiz do projeto"
    exit 1
fi

# Criar diret√≥rios de backup
echo "üìÅ Criando estrutura de diret√≥rios..."
mkdir -p backups/database/{daily,weekly,monthly}
mkdir -p backups/files/{daily,weekly,monthly}
mkdir -p backups/temp
mkdir -p scripts

# Dar permiss√µes de execu√ß√£o aos scripts
echo "üîß Configurando permiss√µes..."
chmod +x scripts/*.js 2>/dev/null || echo "‚ö†Ô∏è  Scripts ainda n√£o existem"

# Verificar depend√™ncias
echo "üì¶ Verificando depend√™ncias..."
if ! npm list node-cron >/dev/null 2>&1; then
    echo "üì• Instalando depend√™ncia node-cron..."
    npm install node-cron --legacy-peer-deps
fi

# Verificar vari√°vel de ambiente
echo "üîç Verificando configura√ß√£o..."
if [ -z "$DATABASE_URL" ]; then
    echo "‚ö†Ô∏è  Vari√°vel DATABASE_URL n√£o encontrada"
    echo "   Certifique-se de configurar no arquivo .env"
else
    echo "‚úÖ DATABASE_URL configurada"
fi

# Testar conex√£o com banco (se poss√≠vel)
if command -v psql >/dev/null 2>&1 && [ ! -z "$DATABASE_URL" ]; then
    echo "üîó Testando conex√£o com banco..."
    if psql "$DATABASE_URL" -c "SELECT 1;" >/dev/null 2>&1; then
        echo "‚úÖ Conex√£o com banco OK"
    else
        echo "‚ö†Ô∏è  N√£o foi poss√≠vel conectar ao banco"
    fi
else
    echo "‚ö†Ô∏è  psql n√£o encontrado ou DATABASE_URL n√£o configurada"
fi

echo ""
echo "‚úÖ Configura√ß√£o conclu√≠da!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "   1. Configure DATABASE_URL no arquivo .env"
echo "   2. Teste um backup: npm run backup:daily"
echo "   3. Verifique estat√≠sticas: npm run backup:stats"
echo "   4. Acesse a interface: /settings/backup"
echo ""
echo "üìö Documenta√ß√£o: backups/README.md"
